name: Pages

on:
  push:
    branches:
      - main # default branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH Key
        env:
          ACTION_DEPLOY_KEY: ${{ secrets.HEXO_DEPLOY_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$ACTION_DEPLOY_KEY" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git config --global user.email "RolinShmily@outlook.com"
          git config --global user.name "RolinShmily"
      
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          ref: main
          submodules: recursive
      
      - name: Use Node.js 23
        uses: actions/setup-node@v4
        with:
          node-version: '23'
      
      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-
      
      - name: Install Dependencies
        run: |
          npm install hexo-cli -g
          npm install
      
      - name: Build
        run: |
          hexo clean
          hexo generate
      
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
  
  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  refresh-cdn:
    needs: deploy  
    runs-on: ubuntu-latest
    steps:
      - name: Install阿里云SDK
        run: |
          npm install @alicloud/cdn20180510 @alicloud/openapi-client @alicloud/tea-typescript @alicloud/credentials

      - name: 刷新CDN缓存
        env:
          ACCESS_KEY_ID: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
          ACCESS_KEY_SECRET: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
          CDN_DOMAIN: ${{ secrets.CDN_DOMAIN }}
          REFRESH_PATH: ${{ secrets.REFRESH_PATH }}
        run: |
          echo "const CDN20180510 = require('@alicloud/cdn20180510');
          const OpenApi = require('@alicloud/openapi-client');
          const Tea = require('@alicloud/tea-typescript');
          const { AccessKeyCredential } = require('@alicloud/credentials');

          async function main() {
            // 使用AccessKeyCredential替代Credentials
            const cred = new AccessKeyCredential(
              process.env.ACCESS_KEY_ID,
              process.env.ACCESS_KEY_SECRET
            );
            
            const config = new OpenApi.Config({
              credential: cred,
              regionId: 'cn-hangzhou',
              endpoint: 'cdn.aliyuncs.com'
            });

            const client = new CDN20180510.default(config);
            const refreshObjectCachesRequest = new CDN20180510.RefreshObjectCachesRequest({
              objectPath: process.env.REFRESH_PATH,
              objectType: 'Directory'
            });

            try {
              const result = await client.refreshObjectCaches(refreshObjectCachesRequest);
              console.log('CDN缓存刷新成功:', JSON.stringify(result));
            } catch (error) {
              console.error('CDN缓存刷新失败:', error);
              process.exit(1);
            }
          }

          main();" > refresh-cdn.js
          
          node refresh-cdn.js
